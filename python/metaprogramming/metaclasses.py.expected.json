{
  "language": "Python",
  "ast": {
    "type": "module",
    "functions": [
      {
        "name": "log_calls",
        "type": "function_definition",
        "parameters": [
          {"name": "cls", "type": "Any"}
        ],
        "return_type": "Any",
        "body_range": {
          "start_line": 16,
          "start_column": 0,
          "end_line": 35,
          "end_column": 4
        },
        "docstring": "A class decorator that logs method calls"
      },
      {
        "name": "singleton",
        "type": "function_definition",
        "parameters": [
          {"name": "cls", "type": "Any"}
        ],
        "return_type": "Any",
        "body_range": {
          "start_line": 38,
          "start_column": 0,
          "end_line": 48,
          "end_column": 4
        },
        "docstring": "A class decorator that implements the Singleton pattern"
      },
      {
        "name": "timing_method",
        "type": "function_definition",
        "parameters": [
          {"name": "func", "type": "Callable"}
        ],
        "return_type": "Callable",
        "body_range": {
          "start_line": 129,
          "start_column": 0,
          "end_line": 139,
          "end_column": 4
        },
        "docstring": "A method decorator that measures execution time"
      },
      {
        "name": "demonstrate_metaclass",
        "type": "function_definition",
        "parameters": [],
        "return_type": "None",
        "body_range": {
          "start_line": 242,
          "start_column": 0,
          "end_line": 266,
          "end_column": 4
        }
      },
      {
        "name": "demonstrate_class_decorator",
        "type": "function_definition",
        "parameters": [],
        "return_type": "None",
        "body_range": {
          "start_line": 269,
          "start_column": 0,
          "end_line": 280,
          "end_column": 4
        }
      },
      {
        "name": "demonstrate_singleton",
        "type": "function_definition",
        "parameters": [],
        "return_type": "None",
        "body_range": {
          "start_line": 283,
          "start_column": 0,
          "end_line": 296,
          "end_column": 4
        }
      },
      {
        "name": "demonstrate_dynamic_attributes",
        "type": "function_definition",
        "parameters": [],
        "return_type": "None",
        "body_range": {
          "start_line": 299,
          "start_column": 0,
          "end_line": 321,
          "end_column": 4
        }
      },
      {
        "name": "demonstrate_dynamic_class_creation",
        "type": "function_definition",
        "parameters": [],
        "return_type": "None",
        "body_range": {
          "start_line": 324,
          "start_column": 0,
          "end_line": 360,
          "end_column": 4
        }
      },
      {
        "name": "main",
        "type": "function_definition",
        "parameters": [],
        "return_type": "None",
        "body_range": {
          "start_line": 363,
          "start_column": 0,
          "end_line": 371,
          "end_column": 4
        }
      }
    ],
    "classes": [
      {
        "name": "ValidateAttributes",
        "type": "metaclass",
        "methods": [
          {
            "name": "__new__",
            "parameters": [
              {"name": "mcs", "type": "Type"},
              {"name": "name", "type": "str"},
              {"name": "bases", "type": "tuple"},
              {"name": "attrs", "type": "dict"}
            ],
            "return_type": "Type",
            "body_range": {
              "start_line": 53,
              "end_line": 64
            }
          },
          {
            "name": "__init__",
            "parameters": [
              {"name": "cls", "type": "Type"},
              {"name": "name", "type": "str"},
              {"name": "bases", "type": "tuple"},
              {"name": "attrs", "type": "dict"}
            ],
            "return_type": "None",
            "body_range": {
              "start_line": 66,
              "end_line": 82
            }
          }
        ],
        "range": {
          "start_line": 51,
          "start_column": 0,
          "end_line": 82,
          "end_column": 8
        },
        "docstring": "A metaclass that enforces type validation for attributes"
      },
      {
        "name": "LazyProperty",
        "type": "descriptor",
        "methods": [
          {
            "name": "__init__",
            "parameters": [
              {"name": "self", "type": "LazyProperty"},
              {"name": "func", "type": "Callable"}
            ],
            "return_type": "None",
            "body_range": {
              "start_line": 87,
              "end_line": 90
            }
          },
          {
            "name": "__get__",
            "parameters": [
              {"name": "self", "type": "LazyProperty"},
              {"name": "instance", "type": "Any"},
              {"name": "owner", "type": "Type"}
            ],
            "return_type": "Any",
            "body_range": {
              "start_line": 92,
              "end_line": 102
            }
          }
        ],
        "range": {
          "start_line": 85,
          "start_column": 0,
          "end_line": 102,
          "end_column": 8
        },
        "docstring": "A descriptor that computes the value only when first accessed"
      },
      {
        "name": "TimingDescriptor",
        "type": "descriptor",
        "methods": [
          {
            "name": "__init__",
            "parameters": [
              {"name": "self", "type": "TimingDescriptor"},
              {"name": "func", "type": "Callable"}
            ],
            "return_type": "None",
            "body_range": {
              "start_line": 107,
              "end_line": 109
            }
          },
          {
            "name": "__get__",
            "parameters": [
              {"name": "self", "type": "TimingDescriptor"},
              {"name": "instance", "type": "Any"},
              {"name": "owner", "type": "Type"}
            ],
            "return_type": "Any",
            "body_range": {
              "start_line": 111,
              "end_line": 123
            }
          }
        ],
        "range": {
          "start_line": 105,
          "start_column": 0,
          "end_line": 123,
          "end_column": 8
        },
        "docstring": "A descriptor that measures the execution time of methods"
      },
      {
        "name": "AttributeProxy",
        "type": "descriptor",
        "methods": [
          {
            "name": "__init__",
            "parameters": [
              {"name": "self", "type": "AttributeProxy"},
              {"name": "target_attr", "type": "str"}
            ],
            "return_type": "None",
            "body_range": {
              "start_line": 144,
              "end_line": 145
            }
          },
          {
            "name": "__get__",
            "parameters": [
              {"name": "self", "type": "AttributeProxy"},
              {"name": "instance", "type": "Any"},
              {"name": "owner", "type": "Type"}
            ],
            "return_type": "Any",
            "body_range": {
              "start_line": 147,
              "end_line": 154
            }
          }
        ],
        "range": {
          "start_line": 142,
          "start_column": 0,
          "end_line": 154,
          "end_column": 8
        },
        "docstring": "A descriptor that delegates attribute access to another object"
      },
      {
        "name": "Person",
        "type": "class_definition",
        "methods": [
          {
            "name": "__init__",
            "parameters": [
              {"name": "self", "type": "Person"},
              {"name": "name", "type": "str"},
              {"name": "age", "type": "int"},
              {"name": "email", "type": "str"}
            ],
            "return_type": "None",
            "body_range": {
              "start_line": 160,
              "end_line": 163
            }
          },
          {
            "name": "validate_name",
            "parameters": [
              {"name": "self", "type": "Person"},
              {"name": "value", "type": "Any"}
            ],
            "return_type": "str",
            "body_range": {
              "start_line": 165,
              "end_line": 169
            },
            "docstring": "Validate that name is a non-empty string"
          },
          {
            "name": "validate_age",
            "parameters": [
              {"name": "self", "type": "Person"},
              {"name": "value", "type": "Any"}
            ],
            "return_type": "int",
            "body_range": {
              "start_line": 171,
              "end_line": 175
            },
            "docstring": "Validate that age is a positive integer"
          },
          {
            "name": "validate_email",
            "parameters": [
              {"name": "self", "type": "Person"},
              {"name": "value", "type": "Any"}
            ],
            "return_type": "str",
            "body_range": {
              "start_line": 177,
              "end_line": 181
            },
            "docstring": "Validate that email contains @"
          },
          {
            "name": "formatted_info",
            "parameters": [
              {"name": "self", "type": "Person"}
            ],
            "return_type": "str",
            "body_range": {
              "start_line": 184,
              "end_line": 186
            },
            "docstring": "Return formatted information about the person",
            "decorator": "LazyProperty"
          },
          {
            "name": "do_work",
            "parameters": [
              {"name": "self", "type": "Person"},
              {"name": "duration", "type": "float", "default": "0.1"}
            ],
            "return_type": "str",
            "body_range": {
              "start_line": 189,
              "end_line": 191
            },
            "docstring": "Simulate doing some work",
            "decorator": "timing_method"
          }
        ],
        "metaclass": "ValidateAttributes",
        "range": {
          "start_line": 158,
          "start_column": 0,
          "end_line": 191,
          "end_column": 8
        },
        "docstring": "A person with validated attributes"
      },
      {
        "name": "Calculator",
        "type": "class_definition",
        "methods": [
          {
            "name": "add",
            "parameters": [
              {"name": "self", "type": "Calculator"},
              {"name": "a", "type": "Any"},
              {"name": "b", "type": "Any"}
            ],
            "return_type": "Any",
            "body_range": {
              "start_line": 198,
              "end_line": 199
            }
          },
          {
            "name": "subtract",
            "parameters": [
              {"name": "self", "type": "Calculator"},
              {"name": "a", "type": "Any"},
              {"name": "b", "type": "Any"}
            ],
            "return_type": "Any",
            "body_range": {
              "start_line": 201,
              "end_line": 202
            }
          },
          {
            "name": "multiply",
            "parameters": [
              {"name": "self", "type": "Calculator"},
              {"name": "a", "type": "Any"},
              {"name": "b", "type": "Any"}
            ],
            "return_type": "Any",
            "body_range": {
              "start_line": 204,
              "end_line": 205
            }
          },
          {
            "name": "divide",
            "parameters": [
              {"name": "self", "type": "Calculator"},
              {"name": "a", "type": "Any"},
              {"name": "b", "type": "Any"}
            ],
            "return_type": "Any",
            "body_range": {
              "start_line": 207,
              "end_line": 210
            }
          }
        ],
        "decorator": "log_calls",
        "range": {
          "start_line": 196,
          "start_column": 0,
          "end_line": 210,
          "end_column": 8
        },
        "docstring": "A simple calculator with logging"
      },
      {
        "name": "AppConfig",
        "type": "class_definition",
        "methods": [
          {
            "name": "__init__",
            "parameters": [
              {"name": "self", "type": "AppConfig"}
            ],
            "return_type": "None",
            "body_range": {
              "start_line": 218,
              "end_line": 220
            }
          },
          {
            "name": "get_setting",
            "parameters": [
              {"name": "self", "type": "AppConfig"},
              {"name": "key", "type": "str"},
              {"name": "default", "type": "Any", "default": "None"}
            ],
            "return_type": "Any",
            "body_range": {
              "start_line": 222,
              "end_line": 223
            }
          },
          {
            "name": "set_setting",
            "parameters": [
              {"name": "self", "type": "AppConfig"},
              {"name": "key", "type": "str"},
              {"name": "value", "type": "Any"}
            ],
            "return_type": "None",
            "body_range": {
              "start_line": 225,
              "end_line": 226
            }
          }
        ],
        "decorator": "singleton",
        "range": {
          "start_line": 215,
          "start_column": 0,
          "end_line": 226,
          "end_column": 8
        },
        "docstring": "A singleton configuration class"
      },
      {
        "name": "DynamicAttributes",
        "type": "class_definition",
        "methods": [
          {
            "name": "__init__",
            "parameters": [
              {"name": "self", "type": "DynamicAttributes"}
            ],
            "return_type": "None",
            "body_range": {
              "start_line": 232,
              "end_line": 233
            }
          },
          {
            "name": "__getattr__",
            "parameters": [
              {"name": "self", "type": "DynamicAttributes"},
              {"name": "name", "type": "str"}
            ],
            "return_type": "Any",
            "body_range": {
              "start_line": 235,
              "end_line": 245
            },
            "docstring": "Called when an attribute is not found"
          },
          {
            "name": "__setattr__",
            "parameters": [
              {"name": "self", "type": "DynamicAttributes"},
              {"name": "name", "type": "str"},
              {"name": "value", "type": "Any"}
            ],
            "return_type": "None",
            "body_range": {
              "start_line": 247,
              "end_line": 253
            },
            "docstring": "Called when an attribute is set"
          }
        ],
        "range": {
          "start_line": 229,
          "start_column": 0,
          "end_line": 253,
          "end_column": 8
        },
        "docstring": "A class that handles missing attributes dynamically"
      }
    ],
    "imports": [
      {
        "name": "typing",
        "symbols": ["Any", "Dict", "List", "Callable", "Type", "Optional", "TypeVar", "cast"],
        "line": 11
      },
      {
        "name": "functools",
        "line": 12
      },
      {
        "name": "inspect",
        "line": 13
      },
      {
        "name": "time",
        "line": 14
      }
    ],
    "docstrings": [
      {
        "type": "module_docstring",
        "text": "Demonstration of Python Metaprogramming\n\nThis example covers:\n- Metaclasses\n- Class decorators\n- Dynamic attribute access (__getattr__, __setattr__)\n- Descriptors\n- Dynamic class creation (type)\n- Attribute access customization\n- Runtime class modification",
        "range": {
          "start_line": 1,
          "start_column": 0,
          "end_line": 10,
          "end_column": 3
        }
      }
    ],
    "decorators": [
      {
        "name": "LazyProperty",
        "applied_to": "Person.formatted_info",
        "line": 183
      },
      {
        "name": "timing_method",
        "applied_to": "Person.do_work",
        "line": 188
      },
      {
        "name": "log_calls",
        "applied_to": "Calculator",
        "line": 195
      },
      {
        "name": "singleton",
        "applied_to": "AppConfig",
        "line": 214
      }
    ],
    "metaprogramming_features": [
      {
        "feature": "metaclass",
        "examples": [
          {
            "class": "ValidateAttributes",
            "line": 51,
            "description": "Metaclass that enforces attribute validation"
          },
          {
            "class": "Person",
            "line": 158,
            "description": "Class using ValidateAttributes metaclass"
          }
        ]
      },
      {
        "feature": "descriptor",
        "examples": [
          {
            "class": "LazyProperty",
            "line": 85,
            "description": "Descriptor for lazy-loaded properties"
          },
          {
            "class": "TimingDescriptor",
            "line": 105,
            "description": "Descriptor for timing method execution"
          },
          {
            "class": "AttributeProxy",
            "line": 142,
            "description": "Descriptor for attribute delegation"
          }
        ]
      },
      {
        "feature": "class_decorator",
        "examples": [
          {
            "function": "log_calls",
            "line": 16,
            "description": "Decorator that logs method calls"
          },
          {
            "function": "singleton",
            "line": 38,
            "description": "Decorator that implements the Singleton pattern"
          }
        ]
      },
      {
        "feature": "dynamic_attribute_access",
        "examples": [
          {
            "method": "DynamicAttributes.__getattr__",
            "line": 235,
            "description": "Custom attribute lookup"
          },
          {
            "method": "DynamicAttributes.__setattr__",
            "line": 247,
            "description": "Custom attribute assignment"
          },
          {
            "method": "ValidateAttributes.__init__",
            "line": 66,
            "description": "Custom __setattr__ injection"
          }
        ]
      },
      {
        "feature": "dynamic_class_creation",
        "examples": [
          {
            "line": 351,
            "code": "DynamicClass = type('DynamicClass', (), attributes)",
            "description": "Creating a class dynamically using type()"
          },
          {
            "line": 357,
            "code": "DynamicClass.add = new_method",
            "description": "Adding a method to a class at runtime"
          }
        ]
      },
      {
        "feature": "method_wrapper",
        "examples": [
          {
            "line": 25,
            "code": "@functools.wraps(attr)",
            "description": "Method wrapping in log_calls"
          },
          {
            "line": 116,
            "code": "@functools.wraps(self.func)",
            "description": "Method wrapping in TimingDescriptor.__get__"
          }
        ]
      }
    ],
    "function_calls": [
      {
        "name": "main",
        "arguments": [],
        "line": 374
      }
    ],
    "dynamic_classes": [
      {
        "name": "DynamicClass",
        "created_at": 351,
        "methods_defined": [
          {"name": "__init__", "line": 328},
          {"name": "calculate", "line": 331},
          {"name": "__str__", "line": 334},
          {"name": "add", "line": 356}
        ],
        "instantiated_at": 354
      }
    ]
  }
}
