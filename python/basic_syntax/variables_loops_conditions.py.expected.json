{
  "language": "Python",
  "ast": {
    "type": "module",
    "functions": [
      {
        "name": "main",
        "type": "function_definition",
        "parameters": [],
        "return_type": "None",
        "body_range": {
          "start_line": 11,
          "start_column": 0,
          "end_line": 80,
          "end_column": 4
        },
        "docstring": "Program entry point"
      }
    ],
    "imports": [
      {
        "name": "typing",
        "symbols": ["List", "Dict", "Set", "Tuple", "Optional"],
        "line": 10
      }
    ],
    "docstrings": [
      {
        "type": "module_docstring",
        "text": "Demonstration of variables, loops, and conditional statements in Python\n\nThis example shows:\n- Various variable declarations and types\n- for and while loops\n- if, elif, else conditions\n- List, dictionary, and set comprehensions\n- Type hints (Python 3.5+)",
        "range": {
          "start_line": 1,
          "start_column": 0,
          "end_line": 9,
          "end_column": 3
        }
      },
      {
        "type": "function_docstring",
        "text": "Program entry point",
        "function": "main",
        "range": {
          "start_line": 12,
          "start_column": 4,
          "end_line": 14,
          "end_column": 7
        }
      }
    ],
    "variable_declarations": [
      {
        "name": "i",
        "type": "int",
        "line": 16,
        "initialized": true
      },
      {
        "name": "f",
        "type": "float",
        "line": 17,
        "initialized": true
      },
      {
        "name": "s",
        "type": "str",
        "line": 18,
        "initialized": true
      },
      {
        "name": "b",
        "type": "bool",
        "line": 19,
        "initialized": true
      },
      {
        "name": "my_list",
        "type": "List[int]",
        "line": 22,
        "initialized": true
      },
      {
        "name": "my_dict",
        "type": "Dict[str, int]",
        "line": 23,
        "initialized": true
      },
      {
        "name": "my_set",
        "type": "Set[int]",
        "line": 24,
        "initialized": true
      },
      {
        "name": "my_tuple",
        "type": "Tuple[int, str, float]",
        "line": 25,
        "initialized": true
      },
      {
        "name": "squares",
        "line": 73,
        "initialized": true
      },
      {
        "name": "char_count",
        "line": 78,
        "initialized": true
      }
    ],
    "loops": [
      {
        "type": "for_statement",
        "range": {
          "start_line": 29,
          "start_column": 4,
          "end_line": 30,
          "end_column": 24
        }
      },
      {
        "type": "for_statement",
        "range": {
          "start_line": 34,
          "start_column": 4,
          "end_line": 35,
          "end_column": 27
        }
      },
      {
        "type": "for_statement",
        "range": {
          "start_line": 39,
          "start_column": 4,
          "end_line": 40,
          "end_column": 47
        }
      },
      {
        "type": "for_statement",
        "range": {
          "start_line": 44,
          "start_column": 4,
          "end_line": 45,
          "end_column": 45
        }
      },
      {
        "type": "while_statement",
        "range": {
          "start_line": 50,
          "start_column": 4,
          "end_line": 52,
          "end_column": 12
        }
      }
    ],
    "conditionals": [
      {
        "type": "if_statement",
        "range": {
          "start_line": 56,
          "start_column": 4,
          "end_line": 59,
          "end_column": 25
        }
      },
      {
        "type": "if_statement",
        "range": {
          "start_line": 63,
          "start_column": 4,
          "end_line": 68,
          "end_column": 33
        }
      }
    ],
    "comprehensions": [
      {
        "type": "list_comprehension",
        "line": 73,
        "expression": "[x**2 for x in range(10) if x % 2 == 0]"
      },
      {
        "type": "dict_comprehension",
        "line": 78,
        "expression": "{char: s.count(char) for char in set(s) if char.isalpha()}"
      }
    ],
    "function_calls": [
      {
        "name": "print",
        "arguments": [
          "\"For loop with list example:\""
        ],
        "line": 28
      },
      {
        "name": "print",
        "arguments": [
          "f\"value: {value}\""
        ],
        "line": 30
      },
      {
        "name": "print",
        "arguments": [
          "\"\\nFor loop with range example:\""
        ],
        "line": 33
      },
      {
        "name": "range",
        "arguments": [
          "5"
        ],
        "line": 34
      },
      {
        "name": "print",
        "arguments": [
          "f\"iteration: {i}\""
        ],
        "line": 35
      },
      {
        "name": "print",
        "arguments": [
          "\"\\nFor loop with enumeration example:\""
        ],
        "line": 38
      },
      {
        "name": "enumerate",
        "arguments": [
          "my_list"
        ],
        "line": 39
      },
      {
        "name": "print",
        "arguments": [
          "f\"index: {index}, value: {value}\""
        ],
        "line": 40
      },
      {
        "name": "print",
        "arguments": [
          "\"\\nFor loop with dictionary example:\""
        ],
        "line": 43
      },
      {
        "name": "my_dict.items",
        "arguments": [],
        "line": 44
      },
      {
        "name": "print",
        "arguments": [
          "f\"key: {key}, value: {value}\""
        ],
        "line": 45
      },
      {
        "name": "print",
        "arguments": [
          "\"\\nWhile loop example:\""
        ],
        "line": 48
      },
      {
        "name": "print",
        "arguments": [
          "f\"iteration: {i}\""
        ],
        "line": 51
      },
      {
        "name": "print",
        "arguments": [
          "\"\\nIf-else example:\""
        ],
        "line": 55
      },
      {
        "name": "print",
        "arguments": [
          "\"b is True\""
        ],
        "line": 57
      },
      {
        "name": "print",
        "arguments": [
          "\"b is False\""
        ],
        "line": 59
      },
      {
        "name": "print",
        "arguments": [
          "\"\\nIf-elif-else example:\""
        ],
        "line": 62
      },
      {
        "name": "print",
        "arguments": [
          "\"i is less than 3\""
        ],
        "line": 64
      },
      {
        "name": "print",
        "arguments": [
          "\"i is equal to 5\""
        ],
        "line": 66
      },
      {
        "name": "print",
        "arguments": [
          "\"i is greater than 5\""
        ],
        "line": 68
      },
      {
        "name": "print",
        "arguments": [
          "\"\\nList comprehension example:\""
        ],
        "line": 71
      },
      {
        "name": "range",
        "arguments": [
          "10"
        ],
        "line": 73
      },
      {
        "name": "print",
        "arguments": [
          "f\"Squares of even numbers from 0-9: {squares}\""
        ],
        "line": 74
      },
      {
        "name": "print",
        "arguments": [
          "\"\\nDictionary comprehension example:\""
        ],
        "line": 77
      },
      {
        "name": "set",
        "arguments": [
          "s"
        ],
        "line": 78
      },
      {
        "name": "s.count",
        "arguments": [
          "char"
        ],
        "line": 78
      },
      {
        "name": "char.isalpha",
        "arguments": [],
        "line": 78
      },
      {
        "name": "print",
        "arguments": [
          "f\"Character count in '{s}': {char_count}\""
        ],
        "line": 79
      },
      {
        "name": "main",
        "arguments": [],
        "line": 82
      }
    ]
  }
}
